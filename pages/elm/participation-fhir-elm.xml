<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="Participation_FHIR" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
   </includes>
   <valueSets>
      <def name="NCQA Payer" id="http://ncqa.org/fhir/hedis/ValueSet/ncqa-payer" accessLevel="Public"/>
      <def name="Commercial" id="urn:oid:2.16.840.1.113762.1.4.1165.46" accessLevel="Public"/>
      <def name="Medicaid" id="urn:oid:2.16.840.1.113762.1.4.1165.45" accessLevel="Public"/>
      <def name="Medicare" id="urn:oid:2.16.840.1.113762.1.4.1165.44" accessLevel="Public"/>
   </valueSets>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="Medicaid Product" context="Patient" accessLevel="Public">
         <expression valueType="t:String" value="medicaid" xsi:type="Literal"/>
      </def>
      <def name="Commercial Product" context="Patient" accessLevel="Public">
         <expression valueType="t:String" value="commercial" xsi:type="Literal"/>
      </def>
      <def name="Medicare Product" context="Patient" accessLevel="Public">
         <expression valueType="t:String" value="medicare" xsi:type="Literal"/>
      </def>
      <def name="Is Enrolled On Date" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="P">
                  <expression xsi:type="Case">
                     <comparand name="ProductLine" xsi:type="OperandRef"/>
                     <caseItem>
                        <when name="Commercial Product" xsi:type="ExpressionRef"/>
                        <then dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
                           <codes name="Commercial" xsi:type="ValueSetRef"/>
                        </then>
                     </caseItem>
                     <caseItem>
                        <when name="Medicare Product" xsi:type="ExpressionRef"/>
                        <then dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
                           <codes name="Medicare" xsi:type="ValueSetRef"/>
                        </then>
                     </caseItem>
                     <caseItem>
                        <when name="Medicaid Product" xsi:type="ExpressionRef"/>
                        <then dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
                           <codes name="Medicaid" xsi:type="ValueSetRef"/>
                        </then>
                     </caseItem>
                     <else xsi:type="As">
                        <operand xsi:type="Null"/>
                        <asTypeSpecifier xsi:type="ListTypeSpecifier">
                           <elementType name="fhir:Coverage" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </else>
                  </expression>
               </source>
               <where xsi:type="In">
                  <operand name="IndexDate" xsi:type="OperandRef"/>
                  <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand path="period" scope="P" xsi:type="Property"/>
                  </operand>
               </where>
            </operand>
         </expression>
         <operand name="ProductLine">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="IndexDate">
            <operandTypeSpecifier name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="Enrollment Periods" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="Year">
               <expression xsi:type="List">
                  <element value="3" unit="years" xsi:type="Quantity"/>
                  <element value="2" unit="years" xsi:type="Quantity"/>
                  <element value="1" unit="year" xsi:type="Quantity"/>
               </expression>
            </source>
            <where xsi:type="After">
               <operand xsi:type="Subtract">
                  <operand xsi:type="End">
                     <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="Subtract">
                     <operand name="Year" xsi:type="AliasRef"/>
                     <operand value="1" unit="year" xsi:type="Quantity"/>
                  </operand>
               </operand>
               <operand xsi:type="Start">
                  <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
               </operand>
            </where>
            <return>
               <expression lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Max">
                     <source xsi:type="List">
                        <element xsi:type="Successor">
                           <operand xsi:type="Subtract">
                              <operand xsi:type="End">
                                 <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                              </operand>
                              <operand name="Year" xsi:type="AliasRef"/>
                           </operand>
                        </element>
                        <element xsi:type="Start">
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </element>
                     </source>
                  </low>
                  <high xsi:type="Subtract">
                     <operand xsi:type="End">
                        <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Subtract">
                        <operand name="Year" xsi:type="AliasRef"/>
                        <operand value="1" unit="year" xsi:type="Quantity"/>
                     </operand>
                  </high>
               </expression>
            </return>
         </expression>
         <operand name="ParticipationPeriod">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Participation" context="Patient" accessLevel="Public">
         <expression xsi:type="Union">
            <operand xsi:type="Union">
               <operand dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
                  <codes name="Commercial" xsi:type="ValueSetRef"/>
               </operand>
               <operand dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
                  <codes name="Medicaid" xsi:type="ValueSetRef"/>
               </operand>
            </operand>
            <operand dataType="fhir:Coverage" codeProperty="type" xsi:type="Retrieve">
               <codes name="Medicare" xsi:type="ValueSetRef"/>
            </operand>
         </expression>
      </def>
      <def name="Participation In Period" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Collapse">
            <operand xsi:type="Query">
               <source alias="P">
                  <expression name="Participation" xsi:type="ExpressionRef"/>
               </source>
               <where xsi:type="Overlaps">
                  <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand path="period" scope="P" xsi:type="Property"/>
                  </operand>
                  <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
               </where>
               <return distinct="false">
                  <expression xsi:type="Intersect">
                     <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="period" scope="P" xsi:type="Property"/>
                     </operand>
                     <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                  </expression>
               </return>
            </operand>
            <operand resultTypeName="t:Quantity" xsi:type="Null"/>
         </expression>
         <operand name="ParticipationPeriod">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Gap Days In Period" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand xsi:type="Count">
               <source name="Periods" xsi:type="OperandRef"/>
            </comparand>
            <caseItem>
               <when valueType="t:Integer" value="1" xsi:type="Literal"/>
               <then xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand precision="Day" xsi:type="Starts">
                        <operand xsi:type="Indexer">
                           <operand name="Periods" xsi:type="OperandRef"/>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                        <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                     </operand>
                  </condition>
                  <then precision="Day" xsi:type="DifferenceBetween">
                     <operand xsi:type="End">
                        <operand xsi:type="Indexer">
                           <operand name="Periods" xsi:type="OperandRef"/>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                     </operand>
                  </then>
                  <else xsi:type="If">
                     <condition asType="t:Boolean" xsi:type="As">
                        <operand precision="Day" xsi:type="Ends">
                           <operand xsi:type="Indexer">
                              <operand name="Periods" xsi:type="OperandRef"/>
                              <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </operand>
                     </condition>
                     <then precision="Day" xsi:type="DifferenceBetween">
                        <operand xsi:type="Start">
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </operand>
                        <operand xsi:type="Start">
                           <operand xsi:type="Indexer">
                              <operand name="Periods" xsi:type="OperandRef"/>
                              <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                        </operand>
                     </then>
                     <else valueType="t:Integer" xsi:type="MaxValue"/>
                  </else>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2" xsi:type="Literal"/>
               <then xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand xsi:type="And">
                        <operand precision="Day" xsi:type="Starts">
                           <operand xsi:type="Indexer">
                              <operand name="Periods" xsi:type="OperandRef"/>
                              <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </operand>
                        <operand precision="Day" xsi:type="Ends">
                           <operand xsi:type="Indexer">
                              <operand name="Periods" xsi:type="OperandRef"/>
                              <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                           </operand>
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then precision="Day" xsi:type="DifferenceBetween">
                     <operand xsi:type="End">
                        <operand xsi:type="Indexer">
                           <operand name="Periods" xsi:type="OperandRef"/>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                     </operand>
                     <operand xsi:type="Start">
                        <operand xsi:type="Indexer">
                           <operand name="Periods" xsi:type="OperandRef"/>
                           <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                        </operand>
                     </operand>
                  </then>
                  <else valueType="t:Integer" xsi:type="MaxValue"/>
               </then>
            </caseItem>
            <else valueType="t:Integer" xsi:type="MaxValue"/>
         </expression>
         <operand name="ParticipationPeriod">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand name="Periods">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is Continuously Enrolled In Period" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="LessOrEqual">
            <operand name="Gap Days In Period" xsi:type="FunctionRef">
               <operand name="EnrollmentPeriod" xsi:type="OperandRef"/>
               <operand name="Participation In Period" xsi:type="FunctionRef">
                  <operand name="EnrollmentPeriod" xsi:type="OperandRef"/>
               </operand>
            </operand>
            <operand name="AllowedGapDays" xsi:type="OperandRef"/>
         </expression>
         <operand name="EnrollmentPeriod">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand name="AllowedGapDays">
            <operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="Is Enrolled" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <caseItem>
               <when xsi:type="IsNull">
                  <operand name="ProductLine" xsi:type="OperandRef"/>
               </when>
               <then valueType="t:Boolean" value="true" xsi:type="Literal"/>
            </caseItem>
            <else xsi:type="And">
               <operand name="Is Enrolled On Date" xsi:type="FunctionRef">
                  <operand name="ProductLine" xsi:type="OperandRef"/>
                  <operand name="IndexDate" xsi:type="OperandRef"/>
               </operand>
               <operand xsi:type="AllTrue">
                  <source xsi:type="Query">
                     <source alias="EnrollmentPeriod">
                        <expression name="Enrollment Periods" xsi:type="FunctionRef">
                           <operand name="ParticipationPeriod" xsi:type="OperandRef"/>
                        </expression>
                     </source>
                     <return>
                        <expression name="Is Continuously Enrolled In Period" xsi:type="FunctionRef">
                           <operand name="EnrollmentPeriod" xsi:type="AliasRef"/>
                           <operand xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="GreaterOrEqual">
                                    <operand precision="Month" xsi:type="DurationBetween">
                                       <operand xsi:type="Start">
                                          <operand name="EnrollmentPeriod" xsi:type="AliasRef"/>
                                       </operand>
                                       <operand xsi:type="End">
                                          <operand name="EnrollmentPeriod" xsi:type="AliasRef"/>
                                       </operand>
                                    </operand>
                                    <operand valueType="t:Integer" value="6" xsi:type="Literal"/>
                                 </operand>
                              </condition>
                              <then name="AllowedGapDays" xsi:type="OperandRef"/>
                              <else valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                        </expression>
                     </return>
                  </source>
               </operand>
            </else>
         </expression>
         <operand name="ProductLine">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="IndexDate">
            <operandTypeSpecifier name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="ParticipationPeriod">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
         <operand name="AllowedGapDays">
            <operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>
