{
  "resourceType": "Library",
  "id": "library-common-logic",
  "text": {
      "status": "generated",
      "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">Library/library-common-logic/_history/2</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"><span><br/><span><span style=\"padding-left: 25px;\"><b>code: </b><span>logic-library</span></span></span></span></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Identifier: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>system: </b><span>http://ncqa.org/hedis/identifiers</span><br/><b>value: </b><span>L-CMN</span></td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">3.10.000</td></tr><tr><th scope=\"row\"><b>Title: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">NCQA Common Library (FHIR Version)</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr><th scope=\"row\"><b>Description: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">This library contains common expressions and terminology declarations used throughout the HEDIS measures.</td></tr><tr><th scope=\"row\"><b>Purpose: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">This library provides a mechanism to share common definitions used by multiple HEDIS measures.</td></tr><tr><th scope=\"row\"><b>Usage: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">This library should be used whenever common notions such as inpatient encounters, hospice determination, or participation are required within a measure definition.</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Contributor: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b><span>author</span>: </b><span>National Committee for Quality Assurance</span></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/FHIRHelpers/_history/1</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"5\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>urn:oid:2.16.840.1.113762.1.4.1165.43</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>urn:oid:2.16.840.1.113883.3.666.5.307</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Task</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>urn:oid:2.16.840.1.113883.3.464.1003.101.12.1014</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>urn:oid:2.16.840.1.113883.3.666.5.307</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Task</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>urn:oid:2.16.840.1.113762.1.4.1108.15</span></span></p></div></td></tr>    <!-- Filter down to human readable content --><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library NCQA_Common_FHIR version '3.10.000'\r\n\r\nusing FHIR version '3.0.0'\r\n\r\ninclude FHIRHelpers version '3.0.0'\r\n\r\ncodesystem \"LOINC\": 'urn:oid:2.16.840.1.113883.6.1'\r\ncodesystem \"SNOMEDCT\": 'urn:oid:2.16.840.1.113883.6.96'\r\ncodesystem \"SNOMEDCT:2015-09\": 'urn:oid:2.16.840.1.113883.6.96' version 'urn:hl7:version:2015-09'\r\ncodesystem \"SNOMEDCT:2016-03\": 'urn:oid:2.16.840.1.113883.6.96' version 'urn:hl7:version:2016-03'\r\n\r\nvalueset \"Encounter Inpatient\": 'urn:oid:2.16.840.1.113883.3.666.5.307'\r\nvalueset \"Hospice care ambulatory\": 'urn:oid:2.16.840.1.113762.1.4.1108.15'\r\nvalueset \"Care Services in Long-Term Residential Facility\": 'urn:oid:2.16.840.1.113883.3.464.1003.101.12.1014'\r\nvalueset \"X Institutional SNP Value Set\": 'urn:oid:2.16.840.1.113762.1.4.1165.43'\r\nvalueset \"Commercial\": 'urn:oid:2.16.840.1.113762.1.4.1165.46'\r\nvalueset \"Medicaid\": 'urn:oid:2.16.840.1.113762.1.4.1165.45'\r\nvalueset \"Medicare\": 'urn:oid:2.16.840.1.113762.1.4.1165.44'\r\nvalueset \"NCQA Payer\": 'urn:oid:2.16.840.1.113762.1.4.1165.42'\r\n\r\ncode \"Birthdate\": '21112-8' from \"LOINC\" display 'Birthdate'\r\ncode \"Dead\": '419099009' from \"SNOMEDCT\" display 'Dead'\r\ncode \"Discharge to healthcare facility for hospice care (procedure)\": '428371000124100' from \"SNOMEDCT:2015-09\" display 'Discharge to healthcare facility for hospice care (procedure)'\r\ncode \"Discharge to home for hospice care (procedure)\": '428361000124107' from \"SNOMEDCT:2015-09\" display 'Discharge to home for hospice care (procedure)'\r\ncode \"Long term care hospital (environment)\": '32074000' from \"SNOMEDCT:2016-03\" display 'Long term care hospital (environment)'\r\ncode \"Patient transfer, to another health care facility (procedure)\": '19712007' from \"SNOMEDCT:2016-03\" display 'Patient transfer, to another health care facility (procedure)'\r\ncode \"Referral to long term care service (procedure)\": '417708006' from \"SNOMEDCT:2016-03\" display 'Referral to long term care service (procedure)'\r\n\r\nparameter \"Measurement Period\" Interval&lt;DateTime&gt;\r\n\r\ncontext Patient\r\n\r\ndefine \"Is Enrolled in Institutional SNP\":\r\n  exists ( [\"Encounter\": \"X Institutional SNP Value Set\"] SNP\r\n      where SNP.status in { 'in-progress', 'finished' }\r\n        and SNP.period overlaps \"Measurement Period\"\r\n  )\r\n\r\ndefine \"Is Living Long Term in Institution\":\r\n  exists ( [\"Encounter\": \"Encounter Inpatient\"] DischargeLongTerm\r\n      where DischargeLongTerm.status in { 'in-progress', 'finished' }\r\n        and ( FHIRHelpers.ToConcept(DischargeLongTerm.hospitalization.dischargeDisposition)~ \"Patient transfer, to another health care facility (procedure)\"\r\n            or FHIRHelpers.ToConcept(DischargeLongTerm.hospitalization.dischargeDisposition)~ \"Referral to long term care service (procedure)\"\r\n        )\r\n        and DischargeLongTerm.period ends during \"Measurement Period\"\r\n  )\n    // TODO: Consider whether this should be Procedure or Task? (See http://build.fhir.org/ig/cqframework/qi-core/Intervention.html#Intervention)\r\n    or exists ( [\"Task\": \"Care Services in Long-Term Residential Facility\"] LongTermOrder\r\n        where LongTermOrder.intent = 'order'\r\n          and ( LongTermOrder.authoredOn during \"Measurement Period\"\r\n              or LongTermOrder.executionPeriod overlaps \"Measurement Period\"\r\n          )\r\n    )\n    // TODO: For the mapping to task, both Order and Performed map to a Task with intent of order, the fact that\n    // the task is performed seems to be best captured by the presence of an executionPeriod... This would be\n    // worth some discussion with the Workflow Group on the intended representation here\n    //or exists ( [\"Task\": \"Care Services in Long-Term Residential Facility\"] LongTermPerformed\n    //    where LongTermPerformed.\n    //    LongTermPerformed.relevantPeriod overlaps \"Measurement Period\"\n    //)\n\n/*This is the standard NCQA Hospice exclusion logic from 3.6.2018*/\r\n\r\ndefine \"Has Hospice\":\r\n  exists ( [\"Encounter\": \"Encounter Inpatient\"] DischargeHospice\r\n      where DischargeHospice.status in { 'in-progress', 'finished' }\r\n        and ( FHIRHelpers.ToConcept(DischargeHospice.hospitalization.dischargeDisposition)~ \"Discharge to home for hospice care (procedure)\"\r\n            or FHIRHelpers.ToConcept(DischargeHospice.hospitalization.dischargeDisposition)~ \"Discharge to healthcare facility for hospice care (procedure)\"\r\n        )\r\n        and DischargeHospice.period ends during \"Measurement Period\"\r\n  )\r\n    or exists ( [\"Task\": \"Hospice care ambulatory\"] HospiceTask\r\n        where HospiceTask.intent = 'order'\r\n          and ( HospiceTask.authoredOn during \"Measurement Period\"\r\n              or HospiceTask.executionPeriod overlaps \"Measurement Period\"\r\n          )\r\n    )\n    // TODO: See discussion in \"Is Living Long Term in Institution\"\n    //or exists ( [\"Intervention, Order\": \"Hospice care ambulatory\"] HospiceOrder\n    //    where HospiceOrder.authorDatetime during \"Measurement Period\"\n    //)\n    //or exists ( [\"Intervention, Performed\": \"Hospice care ambulatory\"] HospicePerformed\n    //    where HospicePerformed.relevantPeriod overlaps \"Measurement Period\"\n    //)\n\n/*ToDate takes a given DateTime value and returns a DateTime with the time components \"zeroed\", and the timezone of the input value, for example */\r\n\r\ndefine function \"ToDate\"(Value DateTime):\r\n  DateTime(year from Value, month from Value, day from Value, 0, 0, 0, 0, timezone from Value)\n\n/*CalendarAgeInDaysAt calculates the calendar age (meaning the age without considering time components) in days*/\r\n\r\ndefine function \"CalendarAgeInDaysAt\"(BirthDateTime DateTime, AsOf DateTime):\r\n  days between ToDate(BirthDateTime)and ToDate(AsOf)\n\n/*CalendarAgeInDays calculates the calendar age (meaning the age without considering time components) in days as of today*/\r\n\r\ndefine function \"CalendarAgeInDays\"(BirthDateTime DateTime):\r\n  CalendarAgeInDaysAt(BirthDateTime, Today())\n\n/*CalendarAgeInMonthsAt calculates the calendar age (meaning the age without considering time components) in months*/\r\n\r\ndefine function \"CalendarAgeInMonthsAt\"(BirthDateTime DateTime, AsOf DateTime):\r\n  months between ToDate(BirthDateTime)and ToDate(AsOf)\r\n\r\ndefine function \"CalendarAgeInMonths\"(BirthDateTime DateTime):\r\n  CalendarAgeInMonthsAt(BirthDateTime, Today())\n\n/*calculates the difference in calendar days between the start and end of the given interval*/\r\n\r\ndefine function \"LengthInDays\"(Value Interval&lt;DateTime&gt;):\r\n  difference in days between start of Value and \r\n  end of Value\n\n/*CalendarAgeInYearsAt calculates the calendar age (meaning the age without considering time components) in years*/\r\n\r\ndefine function \"CalendarAgeInYearsAt\"(BirthDateTime DateTime, AsOf DateTime):\r\n  years between ToDate(BirthDateTime)and ToDate(AsOf)\n\n/*CalendarAgeInYears calculates the calendar age (meaning the age without considering time components) in years as of today */\r\n\r\ndefine function \"CalendarAgeInYears\"(BirthDateTime DateTime):\r\n  CalendarAgeInYearsAt(BirthDateTime, Today())\r\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n        \n            \n            \n        \n    </table>\n</div>"
  },
  "url": "http://ncqa.org/fhir/hedis/Library/library-common-logic",
  "identifier": [
      {
          "system": "http://ncqa.org/hedis/identifiers",
          "value": "Library_CMN"
      }
  ],
  "version": "3.10.000",
  "name": "NCQACommon_FHIR",
  "title": "NCQA Common Library (FHIR Version)",
  "status": "active",
  "experimental": true,
  "type": {
      "coding": [
          {
              "code": "logic-library"
          }
      ]
  },
  "date": "2018-08-01",
  "publisher": "National Committee for Quality Assurance",
  "description": "This library contains common expressions and terminology declarations used throughout the HEDIS measures.",
  "purpose": "This library provides a mechanism to share common definitions used by multiple HEDIS measures.",
  "usage": "This library should be used whenever common notions such as inpatient encounters, hospice determination, or participation are required within a measure definition.",
  "approvalDate": "2018-08-14",
  "lastReviewDate": "2018-08-14",
  "effectivePeriod": {
      "start": "2018-01-01",
      "end": "2018-12-31"
  },
  "jurisdiction": [
      {
          "coding": [
              {
                  "system": "urn:iso:std:iso:3166",
                  "code": "US",
                  "display": "United States of America"
              }
          ],
          "text": "United States of America (the)"
      }
  ],
  "contributor": [
      {
          "type": "author",
          "name": "National Committee for Quality Assurance"
      }
  ],
  "contact": [
      {
          "telecom": [
              {
                  "system": "url",
                  "value": "http://ncqa.org"
              }
          ]
      }
  ],
  "copyright": "The HEDIS measure specifications were developed by and are owned by NCQA. The HEDIS measure specifications are not clinical guidelines and do not establish a standard of medical care. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measure specifications. These materials may not be modified by anyone other than NCQA. Anyone desiring to use or reproduce the materials without modification for a non-commercial purpose may do so without obtaining any approval from NCQA. **Any commercial use (including but not limited to vendors using the measure specifications with a product or service, including calculation of measure results) must be approved by NCQA and are subject to a license at the discretion of NCQA**.  &copy; 2019 NCQA, all rights reserved.",
  "disclaimer": "Limited proprietary coding is contained in the measure specifications for convenience. NCQA disclaims all liability for use or accuracy of any third-party code values contained in the specifications. The American Medical Association holds a copyright to the CPT&reg; codes contained in the measure specifications.The American Hospital Association holds a copyright to the Uniform Billing Codes (“UB”) contained in the measure specifications. The UB Codes in the HEDIS specifications are included with the permission of the AHA. The UB Codes contained in the HEDIS specifications may be used by health plans and other health care delivery organizations for the purpose of calculating and reporting HEDIS measure results or using HEDIS measure results for their internal quality improvement purposes. All other uses of the UB Codes require a license from the AHA. Anyone desiring to use the UB Codes in a commercial product to generate HEDIS results, or for any other commercial use, must obtain a commercial use license directly from the AHA. To inquire about licensing, contact ub04@aha.org.",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-fhir-helpers"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "urn:oid:2.16.840.1.113762.1.4.1165.43"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "urn:oid:2.16.840.1.113883.3.666.5.307"
        }
      ]
    },
    {
      "type": "Task",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1014"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "urn:oid:2.16.840.1.113883.3.666.5.307"
        }
      ]
    },
    {
      "type": "Task",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "urn:oid:2.16.840.1.113762.1.4.1108.15"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": ""
    }
  ]
}