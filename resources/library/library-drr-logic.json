{
  "resourceType": "Library",
  "id": "library-drr-logic",
  "text": {
      "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">drr-fhir</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"><span><br/><span><span style=\"padding-left: 25px;\"><b>system: </b><span>http://hl7.org/fhir/codesystem-library-type.html</span><br/></span><span style=\"padding-left: 25px;\"><b>code: </b><span>logic-library</span></span></span></span></td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">1.0.0</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/fhirhelpers</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"8\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1347</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DiagnosticReport</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1351</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DiagnosticReport</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1044</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DiagnosticReport</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1355</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DiagnosticReport</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1352</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DiagnosticReport</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1356</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span></p></div></td></tr>  <!-- Filter down to human readable content --><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library DRR_FHIR version '1.0.0'\n\n/*\nDepression Remission or Response for Adolescents and Adults (DRR)\n*/\n\n//using FHIR version '3.0.1'\nusing FHIR version '3.0.0'\n\ninclude FHIRHelpers version '3.0.0' called FHIRHelpers\n\n/*\nMeasure Description\nThe percentage of members 12 years of age and older with a diagnosis of\n\t\tdepression and an elevated PHQ-9 score, who had evidence of\n\t\tresponse or remission within 5 to 7 months of the elevated score.\n\t\tThree rates are reported.\n\t1. Follow-Up PHQ-9. The percentage of members who have a follow-up\n\t\tPHQ-9 score documented within the five to seven months after the\n\t\tinitial elevated PHQ-9 score.\n\t2. Depression Remission. The percentage of members who achieved remission\n\t\twithin five to seven months after the initial elevated PHQ-9 score.\n\t3. Depression Response. The percentage of members who showed response\n\t\twithin five to seven months after the initial elevated PHQ-9 score.\n*/\n\ncodesystem \"LOINC\": 'http://loinc.org'\ncodesystem \"SNOMED\": 'http://snomed.info/sct'\ncodesystem \"CQFramework\": 'http://cqframework.info/codesystem/placeholder'\n\n// valueset \"Bipolar Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.67.1.101.1.128' // Grouping Value Set\n// valueset \"Personality Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.67.1.101.1.246' // Grouping Value Set\n// valueset \"Psychotic Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1003.105.12.1153' // User Defined QDM Value Set\n// valueset \"Pervasive Developmental Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1003.105.12.1152' // User Defined QDM Value Set\n// valueset \"Interactive Outpatient Encounter\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1074' // Grouping Value Set\n// valueset \"PHQ-9 Modified Score\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1003.105.12.1154' // User Defined QDM Value Set\n// valueset \"PHQ-9 Tool\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.67.1.101.11.723' // Grouping Value Set\n\n// update\nvalueset \"Bipolar Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1044'\nvalueset \"Bipolar Disorder ECDS\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1346'\n// valueset \"Hospice\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1418'\nvalueset \"Interactive Outpatient Encounter\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1347'\nvalueset \"Major Depression and Dysthymia\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1351'\nvalueset \"Other Bipolar Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1399'\nvalueset \"Personality Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1355'\nvalueset \"Pervasive Developmental Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1356'\nvalueset \"PHQ-9 Total Score\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1401'\nvalueset \"Psychotic Disorder\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1352'\n\n// code \"Major Depression and Dysthymia\": '78667006' from \"SNOMED\"\ncode \"PHQ-9 Modified Score\": '00009' from \"CQFramework\"\ncode \"PHQ-9 Tool\": '44249-1' from \"LOINC\"\n\n/*\nThis library has an explicit parameter which is the measurement year.\nWhile the actual parameter's type accepts all intervals, this library\nexpects it will only be given arguments corresponding exactly to one whole\ncalendar year, and it will not behave properly otherwise; 2017 for example:\nInterval[DateTime(2017,1,1,0,0,0,0), DateTime(2018,1,1,0,0,0,0))\n*/\n\nparameter \"Measurement Period\" Interval&lt;DateTime&gt;\n\n// Intake Period: June 1 of the year prior to the measurement period through May 31 of the measurement period.\ndefine \"Intake Period As MP Shifted Back 7 Months\":\n\tInterval[start of \"Measurement Period\" - 7 months, end of \"Measurement Period\" - 7 months)\n\ndefine \"Intake Period Union Measurement Period\":\n\tInterval[start of \"Measurement Period\" - 7 months, end of \"Measurement Period\" - 7 months)\n\n/*\nThis library evaluates with respect to exactly 1 candidate patient at a time,\nthat patient being given by the special context parameter Patient.\n*/\n\ncontext Patient\n\n/*\nInitial Population\nProduct lines -- Commercial, Medicaid, Medicare (report each product line separately).\n*/\n\ndefine \"Initial Population\":\n\tAgeInYearsAt(start of \"Measurement Period\") &gt;= 12\n\tand\n\texists (\n\t\t\"DRR Encounter\" DRR\n\t\t\twith [DiagnosticReport: \"Major Depression and Dysthymia\"] DepressionDiagnosis\n\t\t\t\tsuch that DepressionDiagnosis.status.value in { 'preliminary', 'final', 'amended', 'corrected', 'appended' }\n\t\t\t\t\tand PeriodToIntervalOfDT(DepressionDiagnosis.effective) overlaps day of PeriodToIntervalOfDT(DRR.period)\n\t)\n\ndefine \"DRR Encounter\":\n\t[Encounter: \"Interactive Outpatient Encounter\"] DRR\n\t\twhere DRR.status.value in { 'planned', 'arrived', 'triaged', 'in-progress', 'onleave', 'finished' }\n\t\t\tand PeriodToIntervalOfDT(DRR.period) during day of \"Intake Period As MP Shifted Back 7 Months\"\n\n/*\nExclusions\n*/\n\ndefine \"Denominator Exclusion\":\n\texists (\n\t\tdistinct (\n\t\t\t[DiagnosticReport: \"Bipolar Disorder\"]\n\t\t\t\t\t// TODO: The spec mentions 3 Bipolar valuesets, which are like\n\t\t\t\t\t// the ones in DSF, but it only gives OIDs for one of the 3\n\t\t\t\t\t// and that OID is different than any in DSF.\n\t\t\t\t\t// Note that DMS and DRR are in the same boat.\n\t\t\t\tunion [DiagnosticReport: \"Personality Disorder\"]\n\t\t\t\tunion [DiagnosticReport: \"Psychotic Disorder\"]\n\t\t\t\tunion [DiagnosticReport: \"Pervasive Developmental Disorder\"]\n\t\t) D\n\t\t\twhere D.status.value in { 'preliminary', 'final', 'amended', 'corrected', 'appended' }\n\t\t\t\tand PeriodToIntervalOfDT(D.effective) overlaps day of \"Intake Period Union Measurement Period\"\n\t)\n\n/*\nDenominators and Numerators\n*/\n\n// Depression Follow-Up\ndefine \"Denominator 1\":\n\t\"Initial Population\"\n\t\tand exists (\"DRR Encounter\")\n\t\tand \"Depression Index\" is not null\n\n// Depression Follow-Up\ndefine \"Numerator 1\":\n\t\"Initial Population\"\n\tand\n\texists (\n\t\t\"PHQ-9 Assessments\" PHQ\n\t\t\twith \"Depression Index\" DI\n\t\t\t\tsuch that PHQ.effective.value after day of DI.effective.value\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &gt;= 150\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &lt;= 210\n\t\treturn PHQ\n\t)\n\n// Depression Remission\ndefine \"Denominator 2\":\n\t\"Denominator 1\"\n\n// Depression Remission\ndefine \"Numerator 2\":\n\t\"Initial Population\"\n\tand\n\texists (\n\t\t\"PHQ-9 Assessments\" PHQ\n\t\t\twith \"Depression Index\" DI\n\t\t\t\tsuch that (PHQ.value as Quantity).value.value &lt; 5\n\t\t\t\t\tand PHQ.effective.value after day of DI.effective.value\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &gt;= 150\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &lt;= 210\n\t\treturn PHQ\n\t)\n\n// Depression Response\ndefine \"Denominator 3\":\n\t\"Denominator 1\"\n\n// Depression Response\ndefine \"Numerator 3\":\n\t\"Initial Population\"\n\tand\n\texists (\n\t\t\"PHQ-9 Assessments\" PHQ\n\t\t\twith \"Depression Index\" DI\n\t\t\t\tsuch that (PHQ.value as Quantity).value.value &lt;= (DI.value as Quantity).value.value / 2\n\t\t\t\t\tand PHQ.effective.value after day of DI.effective.value\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &gt;= 150\n\t\t\t\t\tand days between DI.effective.value and PHQ.effective.value &lt;= 210\n\t\treturn PHQ\n\t)\n\ndefine \"Depression Index\":\n\tFirst (\n\t\t\"PHQ-9 Assessments\" PHQ\n\t\t\twith \"DRR Encounter\" DRR\n\t\t\t\tsuch that (PHQ.value as Quantity).value.value &gt; 9\n\t\t\t\t\tand ((PHQ.effective.value same day or before start of PeriodToIntervalOfDT(DRR.period)\n\t\t\t\t\t\t\tand days between PHQ.effective.value and start of PeriodToIntervalOfDT(DRR.period) &lt;= 15)\n\t\t\t\t\t\tor (PHQ.effective.value same day or after start of PeriodToIntervalOfDT(DRR.period)\n\t\t\t\t\t\t\tand days between start of PeriodToIntervalOfDT(DRR.period) and PHQ.effective.value &lt;= 15))\n\t\treturn PHQ\n\t)\n\ndefine \"PHQ-9 Assessments\":\n\tdistinct (\n\t\t[Observation: \"PHQ-9 Tool\"]\n\t\tunion\n\t\t[Observation: \"PHQ-9 Modified Score\"]\n\t) PHQ\n\t\twhere PHQ.status.value in { 'final', 'amended' }\n\t\t\tand PHQ.value is not null\n\n/*\nStratifiers\n*/\n\ndefine \"Stratifier 1\":\n\tAgeInYearsAt(start of \"Measurement Period\") in Interval[12, 17]\n\ndefine \"Stratifier 2\":\n\tAgeInYearsAt(start of \"Measurement Period\") in Interval[18, 44]\n\ndefine \"Stratifier 3\":\n\tAgeInYearsAt(start of \"Measurement Period\") in Interval[45, 64]\n\ndefine \"Stratifier 4\":\n\tAgeInYearsAt(start of \"Measurement Period\") &gt;= 65\n\n/*\nUtility Functions\n*/\n\ndefine function PeriodToIntervalOfDT(value FHIR.Period):\n\tInterval[value.\"start\".value, value.\"end\".value]\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "version": "1.0.0",
  "name": "DRR_FHIR",
  "title": "DRR Logic",
  "status": "active",
  "experimental": true,
  "type": {
      "coding": [
          {
              "code": "logic-library"
          }
      ]
  },
  "date": "2017-05-05",
  "publisher": "National Committee for Quality Assurance",
  "description": "Depression Remission or Response for Adolescents and Adults (DRR) Logic Library",
  "copyright": "The HEDIS measure specifications were developed by and are owned by NCQA. The HEDIS measure specifications are not clinical guidelines and do not establish a standard of medical care. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measure specifications. These materials may not be modified by anyone other than NCQA. Anyone desiring to use or reproduce the materials without modification for a non-commercial purpose may do so without obtaining any approval from NCQA. **Any commercial use (including but not limited to vendors using the measure specifications with a product or service, including calculation of measure results) must be approved by NCQA and are subject to a license at the discretion of NCQA**.  &copy; 2019 NCQA, all rights reserved.",
  "dataRequirement": [
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1347"
        }
      ]
    },
    {
      "type": "DiagnosticReport",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1351"
        }
      ]
    },
    {
      "type": "DiagnosticReport",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1044"
        }
      ]
    },
    {
      "type": "DiagnosticReport",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1355"
        }
      ]
    },
    {
      "type": "DiagnosticReport",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1352"
        }
      ]
    },
    {
      "type": "DiagnosticReport",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1356"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": ""
    }
  ]
}