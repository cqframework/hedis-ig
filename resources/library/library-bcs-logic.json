{
  "resourceType": "Library",
  "id": "library-bcs-logic",
  "text": {
      "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">bcs-fhir</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"><span><br/><span><span style=\"padding-left: 25px;\"><b>system: </b><span>http://hl7.org/fhir/codesystem-library-type.html</span><br/></span><span style=\"padding-left: 25px;\"><b>code: </b><span>logic-library</span></span></span></span></td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">1.0.0</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/fhirhelpers</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"18\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1042</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Condition</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1331.6</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Claim</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1043.5</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Claim</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1148.7</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1334.15</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1329.1</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Claim</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1230.12</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1335.16</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1330.2</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168</span></span></p></div></td></tr>  <!-- Filter down to human readable content --><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library BCS_FHIR version '1.0.0'\n\n/*\nBreast Cancer Screening (BCS)\n*/\n\nusing FHIR version '3.0.0'\n\ninclude FHIRHelpers version '3.0.0' called FHIRHelpers\n\nvalueset \"Absence of Left Breast Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1329.1' // ICD10CM\nvalueset \"Absence of Right Breast Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1330.2' // ICD10CM\n\nvalueset \"Bilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1042' // Grouping\n// valueset \"Bilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1042.3' // ICD10PCS\n// valueset \"Bilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1042.4' // ICD9CMProc\n\nvalueset \"Bilateral Modifier Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1043.5' // CPT-Mod\nvalueset \"History of Bilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1331.6' // ICD10CM\nvalueset \"Left Modifier Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1148.7' // CPT-Mod\n\nvalueset \"Mammography Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168' // Grouping\n// valueset \"Mammography Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168.8' // CPT\n// valueset \"Mammography Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168.9' // HCPCS\n// valueset \"Mammography Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168.10' // ICD9CMProc\n// valueset \"Mammography Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168.11' // RevCode\n\nvalueset \"Right Modifier Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1230.12' // CPT-Mod\n\nvalueset \"Unilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256' // Grouping\n// valueset \"Unilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256.13' // CPT\n// valueset \"Unilateral Mastectomy Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256.14' // ICD9CMProc\n\nvalueset \"Unilateral Mastectomy Left Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1334.15' // ICD10PCS\nvalueset \"Unilateral Mastectomy Right Value Set\": 'http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1335.16' // ICD10PCS\n\ndefine \"First Predecessor Year\":\n\tInterval[Today() - 2 years, Today() - 1 years)\n\ndefine \"Second Predecessor Year\":\n\tInterval[Today() - 3 years, Today() - 2 years)\n\ndefine \"Third Predecessor Quarter\":\n\tInterval[Today() - 3 years - 3 months, Today() - 3 years)\n\ndefine \"Lookback Interval 27 More Months\":\n\tInterval[Today() - 27 months, Today())\n\ncontext Patient\n\ndefine \"Does Patient Qualify?\":\n\t\"Is Female\"\n\t\tand \"Is Age 52 to 74 at End\"\n\t\tand if \"Has Double Mastectomy\" is null\n\t\t        then true\n\t\t    else not \"Has Double Mastectomy\"\n\ndefine \"Has Double Mastectomy\":\n    \"Is Lacking Both Breasts\"\n        or (\"Is Lacking Left Breast\"\n        and \"Is Lacking Right Breast\")\n\ndefine \"Is Female\":\n\tPatient.gender.value = 'female'\n\ndefine \"Is Age 52 to 74 at End\":\n\tAgeInYears() between 52 and 74\n\n/*\nAdministrative Specification\n*/\n\ndefine \"Needs Mammogram\":\n\tif \"Is Mammogram In Last 39 Months\" is null\n\t    then true\n\telse not \"Is Mammogram In Last 39 Months\"\n\ndefine \"Is Mammogram In Last 39 Months\":\n\texists(\n\t\t[Procedure: \"Mammography Value Set\"] Proc\n\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\tand PeriodToIntervalOfDT(Proc.performed) included in day of \"Lookback Interval 27 More Months\"\n\t)\n\ndefine \"Is Lacking Both Breasts\":\n\t\"Is Bilateral Mastectomy\"\n\t\tor \"Is History Of Bilateral Mastectomy\"\n\t\tor \"Is Unilateral Mastectomy With Bilateral Modifier\"\n\t\tor \"Is Unilateral Mastectomy Twice Spread Two Weeks\"\n\ndefine \"Is Lacking Left Breast\":\n\t\"Is Unilateral Mastectomy With Left Modifier\"\n\t\tor \"Is Unilateral Mastectomy Left\"\n\t\tor \"Is Absence Of Left Breast\"\n\ndefine \"Is Lacking Right Breast\":\n\t\"Is Unilateral Mastectomy With Right Modifier\"\n\t\tor \"Is Unilateral Mastectomy Right\"\n\t\tor \"Is Absence Of Right Breast\"\n\ndefine \"Is Bilateral Mastectomy\":\n\texists(\n\t\t[Procedure: \"Bilateral Mastectomy Value Set\"] Proc\n\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t)\n\ndefine \"Is History Of Bilateral Mastectomy\":\n\texists(\n\t\t[Condition: \"History of Bilateral Mastectomy Value Set\"] Cond\n\t\t\twhere Cond.verificationStatus.value = 'confirmed'\n\t\t\t\tand Cond.assertedDate.value same day or before Today()\n\t)\n\ndefine \"Is Unilateral Mastectomy With Bilateral Modifier\":\n\texists(\n\t\t[Claim] Claim\n\t\t\twhere Claim.status.value = 'active'\n\t\t\t\tand exists(\n\t\t\t\tClaim.procedure BbElem\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Unilateral Mastectomy Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc1\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc1.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Bilateral Modifier Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc2\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc2.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t)\n\t)\n\ndefine \"Is Unilateral Mastectomy Twice Spread Two Weeks\":\n\texists(\n\t\t(\n\t\t\t[Procedure: \"Unilateral Mastectomy Value Set\"] Proc\n\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\treturn PeriodToIntervalOfDT(Proc.performed)\n\t\t) WhenUM1\n\t\t\twith (\n\t\t\t\t[Procedure: \"Unilateral Mastectomy Value Set\"] Proc\n\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\treturn PeriodToIntervalOfDT(Proc.performed)\n\t\t\t) WhenUM2\n\t\t\t\tsuch that (((difference in days between start of WhenUM1 and start of WhenUM2) &gt;= 14)\n\t\t\t\t\tand end of WhenUM1 same day or before Today()\n\t\t\t\t\tand end of WhenUM2 same day or before Today())\n\t)\n\ndefine \"Is Unilateral Mastectomy With Left Modifier\":\n\texists(\n\t\t[Claim] Claim\n\t\t\twhere Claim.status.value = 'active'\n\t\t\t\tand exists(\n\t\t\t\tClaim.procedure BbElem\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Unilateral Mastectomy Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc1\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc1.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Left Modifier Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc2\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc2.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t)\n\t)\n\ndefine \"Is Unilateral Mastectomy Left\":\n\texists(\n\t\t[Procedure: \"Unilateral Mastectomy Left Value Set\"] Proc\n\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t)\n\ndefine \"Is Absence Of Left Breast\":\n\texists(\n\t\t[Observation: \"Absence of Left Breast Value Set\"] Obs\n\t\t\twhere Obs.status.value in { 'final', 'amended' }\n\t\t\t\tand Obs.effective.value same day or before Today()\n\t)\n\ndefine \"Is Unilateral Mastectomy With Right Modifier\":\n\texists(\n\t\t[Claim] Claim\n\t\t\twhere Claim.status.value = 'active'\n\t\t\t\tand exists(\n\t\t\t\tClaim.procedure BbElem\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Unilateral Mastectomy Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc1\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc1.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t\t\twith (\n\t\t\t\t\t\t[Procedure: \"Right Modifier Value Set\"] Proc\n\t\t\t\t\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\t\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t\t\t\t\t) Proc2\n\t\t\t\t\t\tsuch that\n\t\t\t\t\t\t\t(if BbElem.procedure is FHIR.Reference\n\t\t\t\t\t\t\t\tthen Proc2.identifier contains (BbElem.procedure as FHIR.Reference).identifier\n\t\t\t\t\t\t\t\telse false)\n\t\t\t)\n\t)\n\ndefine \"Is Unilateral Mastectomy Right\":\n\texists(\n\t\t[Procedure: \"Unilateral Mastectomy Right Value Set\"] Proc\n\t\t\twhere Proc.status.value = 'completed'\n\t\t\t\tand end of PeriodToIntervalOfDT(Proc.performed) same day or before Today()\n\t)\n\ndefine \"Is Absence Of Right Breast\":\n\texists(\n\t\t[Observation: \"Absence of Right Breast Value Set\"] Obs\n\t\t\twhere Obs.status.value in { 'final', 'amended' }\n\t\t\t\tand end of PeriodToIntervalOfDT(Obs.effective) same day or before Today()\n\t)\n\ndefine MammogramSummary:\n    'A Mammogram procedure for the patient is recommended'\n\ndefine MammogramDetail:\n    'The patient has not had a Mammogram procedure in the last 39 months'\n\ndefine MammogramIndicator:\n    'warning'\n\n/*\nUtility Functions\n*/\n\ndefine function PeriodToIntervalOfDT(value FHIR.Period):\n\tInterval[value.\"start\".value, value.\"end\".value]\n\ndefine function CodingToCode(coding FHIR.Coding):\n\tSystem.Code {\n\t\tcode: coding.code.value,\n\t\tsystem: coding.system.value,\n\t\tversion: coding.version.value,\n\t\tdisplay: coding.display.value\n\t}\n\t// From FHIRHelpers\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "url": "http://ncqa.org/fhir/hedis/Library/library-bcs-logic",
  "identifier": [
      {
          "use": "official",
          "value": "Library_BCS"
      }
  ],
  "version": "1.0.1",
  "name": "BCS_FHIR",
  "title": "BCS Logic",
  "status": "active",
  "experimental": true,
  "type": {
      "coding": [
          {
              "code": "logic-library"
          }
      ]
  },
  "date": "2017-05-05",
  "publisher": "National Committee for Quality Assurance",
  "description": "Breast Cancer Screening (BCS) Logic Library",
  "copyright": "The HEDIS measure specifications were developed by and are owned by NCQA. The HEDIS measure specifications are not clinical guidelines and do not establish a standard of medical care. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measure specifications. These materials may not be modified by anyone other than NCQA. Anyone desiring to use or reproduce the materials without modification for a non-commercial purpose may do so without obtaining any approval from NCQA. **Any commercial use (including but not limited to vendors using the measure specifications with a product or service, including calculation of measure results) must be approved by NCQA and are subject to a license at the discretion of NCQA**.  &copy; 2019 NCQA, all rights reserved.",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-fhir-helpers"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-participation-logic"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-common-logic"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1042"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1331.6"
        }
      ]
    },
    {
      "type": "Claim"
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1043.5"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256"
        }
      ]
    },
    {
      "type": "Claim"
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1148.7"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1334.15"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1329.1"
        }
      ]
    },
    {
      "type": "Claim"
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1256"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1230.12"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1335.16"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1330.2"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://ncqa.org/hedis/ValueSet/2.16.840.1.113883.3.464.1004.1168"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": ""
    }
  ]
}